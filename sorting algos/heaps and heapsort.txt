import random
#places this node in it's place
#doesn't heapify whole array 
def max_heapify_i(l1,i,n):
    left = (i*2) + 1
    right =(i*2) + 2
    larger = i
    if (left < n) and (l1[larger] < l1[left]):
        larger = left
    if (right < n) and (l1[larger] < l1[right]):
        larger = right
    if larger != i:
        l1[larger],l1[i] = l1[i],l1[larger]
        max_heapify(l1,larger,n)

def heapsort(l1):
    n=len(l1)
    for i in range(n-1,-1,-1):
        l1[0],l1[i] = l1[i],l1[0]
        max_heapify_i(l1,0,i)
    print(l1)
l1=[]
for i in range(10):
    l1.append(random.randint(1,20))
print(l1)
n=len(l1)
non_leaf =int(n/2) - 1
for j in range(non_leaf,-1,-1):
    max_heapify_i(l1,j,n)
print(l1)
l1.insert(0,random.randint(1,20))
print(l1)
max_heapify_i(l1,0,len(l1))
print(l1)
