def min_coin(l1,n,l_memo):
    min_count = float('inf')
    if n == 0:
        l_memo[0] =0
        min_count = 0
    elif n >0:
        for i in l1:
            if ((i <= n) and ((n - i) >= 0)):
                count = float('inf')
                try:
                    count = 1 + l_memo[n-i]
                except:
                    count= 1 + min_coin(l1,n-i,l_memo)
                if count < min_count:
                    min_count = count
    l_memo[n] = min_count
    return min_count

def min_count2(l1,n):
    l_memo = {}
    l_memo[0] = 0
    for i in range(1,n+1):
        min_count=float('inf')
        for k in l1:
            if (i -k) >= 0:
                count = 1 + l_memo[i-k]
                if count < min_count:
                    min_count = count
        l_memo[i] = min_count
    print(l_memo)

l1=[3,5,7,10,12]
l_memo={}
print(min_coin(l1,30,l_memo))
print(sorted(l_memo.items()))
print("by bottom up method")
min_count2(l1,30)
