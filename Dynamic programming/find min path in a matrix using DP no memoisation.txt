class path_arr:
    def __init__(self):
        self.len1 = None
        self.path = []


def find_path(l1,i,j,n1,n2):
    min_path = path_arr()
    min_path.len1=float('inf')
    if ((i == n1) and (j == n1)):
        min_path.len1 = 0
        temp=[]
        temp.append(str(i) + str(j))
        min_path.path = temp
    elif ((i <= n1) and (j <= n2) and (l1[i][j] != 1)):
        tempi = i+1
        len1 = 0
        while((tempi <=n1) and (l1[tempi][j] != 1)):
            x=find_path(l1,tempi,j,n1,n2)
            if x.len1 != float('inf'):
                len1=len1 + 1 + x.len1
                if min_path.len1 > len1:
                    min_path.len1 = len1
                    temp = x.path
                    temp.insert(0,(str(tempi) + str(j)))
                    min_path.path = temp
            tempi=tempi + 1
        tempj = j + 1
        len2=0
        while((tempj <= n2) and (l1[i][tempj] != 1)):
            y = find_path(l1,i,tempj,n1,n2)
            if y.len1 != float('inf'):
                len2=len2 + 1 + y.len1
                if min_path.len1 > len2:
                    min_path.len1 = len2
                    temp = y.path
                    temp.insert(0,(str(i) + str(tempj)))
                    min_path.path = temp
            tempj = tempj + 1
    return min_path


l1=[[0 for i in range(5)] for j in range(5)]
l1[1][3] = 1
l1[2][2] = 1
l1[3][1] = 1
l1[4][0] = 1
for q in l1:
    print(q)

ans = find_path(l1,0,0,4,4)
print(ans.len1)
print(ans.path)
